
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://gpxxuznyigvlndvzctzh.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdweHh1em55aWd2bG5kdnpjdHpoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDUyNjI1NjMsImV4cCI6MjA2MDgzODU2M30.BIDh7Oiu42Jprz_I8ZIcdsztPTqjWY3q4IL9Q9B4bG0";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to convert database DeclarationStatus to our app's DeclarationStatus
export const mapDBStatusToAppStatus = (status: Database['public']['Enums']['declaration_status']): DeclarationStatus => {
  return status;
};

// Helper types for our application
import { DeclarationStatus, legacyStatusMap, legacyRoleMap } from '@/types';

// Helper to get profiles by IDs without recursion issues
export async function getProfilesByIds(userIds: string[]) {
  if (!userIds || userIds.length === 0) return [];
  
  try {
    const { data, error } = await supabase
      .rpc('get_profiles_by_ids', { user_ids: userIds });
    
    if (error) {
      console.error('Error getting profiles by IDs:', error);
      return [];
    }
    
    return data || [];
  } catch (error) {
    console.error('Exception getting profiles by IDs:', error);
    return [];
  }
}
